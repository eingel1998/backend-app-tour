===============================================================================
                    DISE√ëO BACKEND UNIFICADO - APLICACI√ìN M√ìVIL TUR√çSTICA RIOHACHA
                                 PAYLOAD CMS COMO API REST (OPTIMIZADO)
===============================================================================

FECHA: 2 de junio de 2025
BASADO EN: Requerimientos funcionales RF-A01 a RF-E07 y propuesta de unificaci√≥n
ESTRUCTURA: 8 colecciones optimizadas (reducci√≥n del 38% vs dise√±o original)

===============================================================================
1. COLECCIONES UNIFICADAS EN PAYLOAD CMS
===============================================================================

üìä RESUMEN DE COLECCIONES:
1. üî• users (UNIFICADA: users + business-users + favorites)
2. ‚úÖ places (Lugares tur√≠sticos)
3. ‚úÖ categories (Categor√≠as de lugares)
4. ‚úÖ reviews (Valoraciones y comentarios)
5. üî• conversations (UNIFICADA: chat-conversations + chat-messages)
6. üî• recommendations (UNIFICADA: recommendations + itineraries)
7. ‚úÖ events (Eventos y actividades)
8. ‚úÖ media (Archivos multimedia)

===============================================================================
1.1 COLECCI√ìN: users (UNIFICADA) üî•‚≠ê
===============================================================================

Descripci√≥n: Todos los usuarios del sistema (regulares, empresas, admins)
Unifica: users + business-users + favorites

Campos b√°sicos de usuario:
- id: text (auto-generado)
- email: email (√∫nico, requerido) - RF-A01, RF-A02
- password: text (encriptado, requerido) - RF-A01, RF-A02
- firstName: text (requerido) - RF-U01
- lastName: text (requerido) - RF-U01
- phone: text (opcional) - RF-U04
- dateOfBirth: date (opcional) - RF-U01
- profileImage: upload (relaci√≥n con media) - RF-U01
- isActive: checkbox (default: true) - RF-A07
- lastLogin: date (auto) - RF-A05
- loginAttempts: number (default: 0) - RF-A07
- isBlocked: checkbox (default: false) - RF-A07
- userType: select ['user', 'business', 'admin'] (default: 'user') üî• CAMPO CLAVE
- createdAt: date (auto)
- updatedAt: date (auto)

Preferencias de viaje (para todos los usuarios):
- travelPreferences: group - RF-U03
  - budgetRange: select ['low', 'medium', 'high']
  - travelType: select ['adventure', 'cultural', 'relaxation', 'business', 'family']
  - accommodationType: select ['hotel', 'hostel', 'apartment', 'resort', 'camping']
  - transportation: select ['car', 'public', 'walking', 'bike', 'motorcycle']
  - interests: array
    - interest: text
  - favoriteCategories: relationship (many) -> categories

Configuraciones de contacto:
- contactPreferences: group - RF-U04
  - emailNotifications: checkbox (default: true)
  - smsNotifications: checkbox (default: false)
  - pushNotifications: checkbox (default: true)
  - marketingEmails: checkbox (default: false)

üî• DATOS DE EMPRESA (Condicional - solo si userType === 'business'):
- businessData: group - RF-E01, RF-E02
  - businessName: text (requerido si es business)
  - businessType: select ['hotel', 'restaurant', 'tour_operator', 'transport', 'attraction', 'guide', 'shop']
  - description: richText
  - shortDescription: textarea (m√°x 200 chars)
  - address: text
  - city: text (default: 'Riohacha')
  - department: text (default: 'La Guajira')
  - website: text (URL format)
  - rut: text (n√∫mero de registro empresarial)
  - taxId: text (NIT)
  
  - socialMedia: group
    - facebook: text (URL)
    - instagram: text (URL)
    - twitter: text (URL)
    - whatsapp: text (n√∫mero)
    - youtube: text (URL)
  
  - businessHours: array - RF-E02
    - day: select ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']
    - openTime: text (formato HH:MM)
    - closeTime: text (formato HH:MM)
    - isClosed: checkbox
    - isOpen24h: checkbox
  
  - multimedia: group - RF-E03
    - logo: upload (relaci√≥n con media)
    - coverImage: upload (relaci√≥n con media)
    - images: relationship (many) -> media
    - videos: relationship (many) -> media
    - virtualTour: text (URL)
  
  - services: array - RF-E02
    - serviceName: text
    - description: textarea
    - price: number
    - currency: select ['COP', 'USD'] (default: 'COP')
    - isAvailable: checkbox (default: true)
    - category: text
    - duration: text (ej: "2 horas", "d√≠a completo")
  
  - location: group
    - coordinates: group
      - latitude: number (requerido si es business)
      - longitude: number (requerido si es business)
    - googleMapsUrl: text
    - landmarks: textarea (referencias cercanas)
  
  - businessSettings: group
    - verificationStatus: select ['pending', 'verified', 'rejected'] (default: 'pending')
    - verificationDate: date
    - verificationNotes: textarea
    - isPremium: checkbox (default: false)
    - subscriptionExpiry: date
    - allowReviews: checkbox (default: true)
    - autoRespond: checkbox (default: false)
  
  - statistics: group (solo lectura, calculado)
    - totalViews: number (default: 0)
    - totalContacts: number (default: 0)
    - averageRating: number (calculado desde reviews)
    - totalReviews: number (calculado desde reviews)

üî• FAVORITOS EMBEBIDOS (reemplaza colecci√≥n favorites):
- favoritesList: array - RF-U06
  - place: relationship (one) -> places
  - addedAt: date (auto)
  - notes: text (opcional, notas personales)

Hooks y validaciones:
- beforeValidate: encriptar password si cambi√≥
- beforeValidate: validar email √∫nico
- beforeValidate: validar campos requeridos seg√∫n userType
- beforeValidate: validar coordenadas si es business
- afterChange: actualizar estad√≠sticas si es business
- afterLogin: actualizar lastLogin y resetear loginAttempts
- beforeValidate: incrementar loginAttempts en login fallido

Access Control:
- create: p√∫blico (registro)
- read: self + admins + (business data p√∫blico si verificado)
- update: self + admins
- delete: self + admins

===============================================================================
1.2 COLECCI√ìN: places (Lugares tur√≠sticos) ‚úÖ
===============================================================================

Descripci√≥n: Lugares y atractivos tur√≠sticos de Riohacha y La Guajira
Sin cambios significativos del dise√±o original

Campos principales:
- id: text (auto-generado)
- name: text (requerido) - RF-L01
- slug: text (√∫nico, auto-generado desde name)
- description: richText (requerido) - RF-L01
- shortDescription: textarea (m√°x 300 chars)
- category: relationship (one) -> categories (requerido) - RF-L03
- subcategory: text
- tags: array - RF-L01
  - tag: text

Ubicaci√≥n y acceso:
- location: group - RF-L04
  - address: text
  - latitude: number (requerido)
  - longitude: number (requerido)
  - city: text (default: 'Riohacha')
  - department: text (default: 'La Guajira')
  - accessInstructions: richText
  - publicTransport: textarea
  - parkingAvailable: checkbox

Multimedia:
- images: relationship (many) -> media (requerido) - RF-L05
- videos: relationship (many) -> media - RF-L05
- virtualTour: text (URL 360¬∞)

Informaci√≥n pr√°ctica:
- pricing: group - RF-L03
  - isFree: checkbox (default: false)
  - minPrice: number
  - maxPrice: number
  - currency: select ['COP', 'USD'] (default: 'COP')
  - priceDescription: text (ej: "por persona", "por grupo")

- schedule: array
  - day: select ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'holidays']
  - openTime: text
  - closeTime: text
  - isClosed: checkbox
  - isOpen24h: checkbox
  - seasonalNotes: text

- accessibility: group
  - wheelchairAccessible: checkbox
  - hasParking: checkbox
  - hasRestrooms: checkbox
  - hasFood: checkbox
  - allowsPets: checkbox
  - childFriendly: checkbox

- features: array - RF-L01
  - feature: text
  - description: text (opcional)

Informaci√≥n calculada:
- statistics: group (solo lectura)
  - averageRating: number (calculado, 0-5)
  - totalReviews: number (calculado)
  - totalViews: number
  - totalFavorites: number
  - lastReviewDate: date

Relaciones:
- businessOwner: relationship (one) -> users (donde userType='business', opcional)
- relatedPlaces: relationship (many) -> places

Estado y configuraci√≥n:
- status: select ['draft', 'published', 'archived'] (default: 'draft')
- isActive: checkbox (default: true)
- isFeatured: checkbox (default: false)
- isVerified: checkbox (default: false)
- verificationDate: date
- createdAt: date (auto)
- updatedAt: date (auto)

===============================================================================
1.3 COLECCI√ìN: categories (Categor√≠as de lugares) ‚úÖ
===============================================================================

Descripci√≥n: Categor√≠as para clasificar lugares tur√≠sticos
Sin cambios del dise√±o original

Campos:
- id: text (auto-generado)
- name: text (√∫nico, requerido)
- slug: text (√∫nico, auto-generado)
- description: textarea
- icon: text (nombre del icono Material UI)
- color: text (c√≥digo hex)
- image: upload (relaci√≥n con media, opcional)
- parentCategory: relationship (one) -> categories (para subcategor√≠as)
- isActive: checkbox (default: true)
- sortOrder: number (para ordenamiento)
- seoTitle: text
- seoDescription: textarea
- createdAt: date (auto)

Categor√≠as iniciales para Riohacha:
1. Playas y Costas (icon: beach_access, color: #4FC3F7)
2. Sitios Culturales e Hist√≥ricos (icon: account_balance, color: #8D6E63)
3. Aventura y Deportes (icon: hiking, color: #FF7043)
4. Gastronom√≠a Local (icon: restaurant, color: #FFA726)
5. Hospedaje y Alojamiento (icon: hotel, color: #66BB6A)
6. Transporte y Movilidad (icon: directions_car, color: #42A5F5)
7. Compras y Artesan√≠as (icon: shopping_bag, color: #AB47BC)
8. Vida Nocturna (icon: nightlife, color: #EC407A)
9. Naturaleza y Ecoturismo (icon: nature, color: #66BB6A)
10. Turismo de Negocios (icon: business, color: #78909C)

===============================================================================
1.4 COLECCI√ìN: reviews (Valoraciones y comentarios) ‚úÖ
===============================================================================

Descripci√≥n: Rese√±as y valoraciones de usuarios sobre lugares
Sin cambios significativos del dise√±o original

Campos principales:
- id: text (auto-generado)
- user: relationship (one) -> users (requerido) - RF-L06
- place: relationship (one) -> places (requerido) - RF-L06
- rating: number (1-5, requerido) - RF-L06
- title: text (m√°x 100 chars)
- comment: textarea (requerido, m√°x 1000 chars) - RF-L06
- pros: textarea (aspectos positivos)
- cons: textarea (aspectos negativos)

Multimedia y evidencia:
- images: relationship (many) -> media (m√°x 5 im√°genes)
- visitDate: date (cu√°ndo visit√≥ el lugar)
- tripType: select ['solo', 'couple', 'family', 'friends', 'business']

Valoraciones espec√≠ficas:
- ratings: group (valoraciones detalladas)
  - cleanliness: number (1-5)
  - service: number (1-5)
  - value: number (1-5)
  - accessibility: number (1-5)

Estado y moderaci√≥n:
- status: select ['pending', 'approved', 'rejected', 'flagged'] (default: 'pending')
- isVerified: checkbox (default: false) - si el usuario realmente visit√≥
- isVisible: checkbox (default: true)
- moderationNotes: textarea
- flagReason: text

Interacciones:
- helpfulVotes: number (default: 0)
- notHelpfulVotes: number (default: 0)
- reportCount: number (default: 0)
- responses: array (respuestas del negocio)
  - user: relationship (one) -> users (debe ser business owner)
  - response: textarea
  - responseDate: date
  - isOfficial: checkbox (default: true)

- createdAt: date (auto)
- updatedAt: date (auto)

√çndices √∫nicos: user + place (un usuario solo puede rese√±ar un lugar una vez)

===============================================================================
1.5 COLECCI√ìN: conversations (UNIFICADA) üî•‚≠ê
===============================================================================

Descripci√≥n: Conversaciones del asistente virtual con mensajes embebidos
Unifica: chat-conversations + chat-messages

Campos de la conversaci√≥n:
- id: text (auto-generado)
- user: relationship (one) -> users (requerido) - RF-AV01
- sessionId: text (√∫nico por sesi√≥n activa)
- title: text (t√≠tulo generado autom√°ticamente o personalizado)
- isActive: checkbox (default: true)
- language: select ['es', 'en', 'wayuu'] (default: 'es') - RF-AV07
- lastInteraction: date (auto-actualizado)
- createdAt: date (auto)

Contexto y personalizaci√≥n:
- userContext: json - RF-AV02
  - currentLocation: group
    - latitude: number
    - longitude: number
    - city: text
  - preferences: json (copia de user.travelPreferences)
  - sessionData: json (datos temporales de la sesi√≥n)

Configuraci√≥n del asistente:
- assistantSettings: group
  - personality: select ['friendly', 'professional', 'casual'] (default: 'friendly')
  - responseLength: select ['short', 'medium', 'detailed'] (default: 'medium')
  - includeRecommendations: checkbox (default: true)
  - autoTranslate: checkbox (default: false)

üî• MENSAJES EMBEBIDOS (reemplaza chat-messages):
- messages: array - RF-AV01
  - id: text (auto-generado)
  - sender: select ['user', 'assistant'] (requerido)
  - message: textarea (requerido)
  - messageType: select ['text', 'recommendation', 'itinerary', 'question', 'greeting'] (default: 'text')
  -
  - processingData: group (para mensajes del asistente)
    - aiModel: text (modelo de IA usado)
    - processingTime: number (ms)
    - confidence: number (0-1)
    - tokens: number (tokens consumidos)
  
  - metadata: json (datos adicionales) - RF-AV02, RF-AV04
    - recommendedPlaces: array (IDs de lugares recomendados)
    - generatedItinerary: object (itinerario sugerido)
    - searchQuery: text (si fue una b√∫squeda)
    - actionPerformed: text (acci√≥n realizada)
  
  - isRead: checkbox (default: false)
  - isEdited: checkbox (default: false)
  - editedAt: date
  - timestamp: date (auto)

Estado y m√©tricas:
- statistics: group (solo lectura)
  - totalMessages: number (calculado)
  - avgResponseTime: number (promedio del asistente)
  - satisfactionRating: number (1-5, opcional del usuario)
  - lastRating: date

- isArchived: checkbox (default: false)
- archivedAt: date

Hooks:
- afterChange: actualizar lastInteraction
- afterChange: actualizar statistics.totalMessages
- beforeCreate: generar sessionId √∫nico

===============================================================================
1.6 COLECCI√ìN: recommendations (UNIFICADA) üî•‚≠ê
===============================================================================

Descripci√≥n: Recomendaciones personalizadas e itinerarios generados
Unifica: recommendations + itineraries

Campos comunes:
- id: text (auto-generado)
- user: relationship (one) -> users (requerido) - RF-AV02, RF-AV04
- recommendationType: select ['place', 'itinerary', 'experience', 'route'] üî• CAMPO CLAVE
- title: text (t√≠tulo generado o personalizado)
- description: textarea
- createdAt: date (auto)

Origen y contexto:
- source: group
  - generatedBy: select ['ai', 'admin', 'user', 'business']
  - sourceConversation: relationship (one) -> conversations (opcional)
  - prompt: textarea (prompt original si fue IA)
  - algorithm: text (algoritmo usado)

- context: json - RF-AV02
  - userPreferences: json (preferencias consideradas)
  - location: group (ubicaci√≥n del usuario al generar)
    - latitude: number
    - longitude: number
  - timeOfRequest: date
  - budget: group
    - min: number
    - max: number
    - currency: select ['COP', 'USD']
  - duration: number (d√≠as disponibles)
  - groupSize: number
  - specialRequests: text

üî• DATOS ESPEC√çFICOS POR TIPO:

Para recommendationType === 'place':
- placeRecommendation: group
  - places: relationship (many) -> places - RF-AV02
  - reason: richText (por qu√© se recomend√≥)
  - score: number (0-1, confianza de la recomendaci√≥n)
  - tags: array (etiquetas de la recomendaci√≥n)
    - tag: text
  - visitOrder: array (orden sugerido de visita)
    - place: relationship (one) -> places
    - orderIndex: number
    - estimatedTime: number (minutos)
    - notes: text

Para recommendationType === 'itinerary':
- itineraryRecommendation: group - RF-AV04
  - name: text (nombre del itinerario)
  - duration: number (d√≠as)
  - difficulty: select ['easy', 'moderate', 'hard']
  - theme: select ['cultural', 'adventure', 'relaxation', 'gastronomic', 'natural', 'mixed']
  
  - dailySchedule: array (horarios detallados por d√≠a)
    - day: number (1, 2, 3...)
    - date: date (fecha espec√≠fica, opcional)
    - activities: array
      - time: text (HH:MM)
      - place: relationship (one) -> places
      - activity: text (descripci√≥n de la actividad)
      - duration: number (minutos)
      - cost: number (costo estimado)
      - notes: text
      - transportation: text (c√≥mo llegar)
  
  - estimatedCosts: group
    - accommodation: number
    - food: number
    - transportation: number
    - activities: number
    - total: number (calculado)
    - currency: select ['COP', 'USD']
  
  - includedServices: array
    - service: text
    - isIncluded: checkbox
    - additionalCost: number
  
  - recommendations: group
    - bestTimeToVisit: text
    - packingList: array
      - item: text
    - tips: array
      - tip: text
    - warnings: array
      - warning: text

Para recommendationType === 'experience':
- experienceRecommendation: group
  - experienceType: select ['adventure', 'cultural', 'gastronomic', 'wellness', 'educational']
  - provider: relationship (one) -> users (business)
  - places: relationship (many) -> places
  - activities: array
    - activity: text
    - duration: text
    - difficulty: select ['easy', 'moderate', 'hard']
  - price: group
    - amount: number
    - currency: select ['COP', 'USD']
    - includes: array
      - item: text

Estados y m√©tricas:
- status: select ['draft', 'active', 'expired', 'archived'] (default: 'active')
- isPublic: checkbox (default: false) - RF-AV04
- isBookable: checkbox (default: false)
- expiresAt: date (cu√°ndo vence la recomendaci√≥n)

- engagement: group (solo lectura)
  - wasViewed: checkbox (default: false)
  - wasAccepted: checkbox (opcional)
  - wasBooked: checkbox (default: false)
  - wasShared: checkbox (default: false)
  - viewedAt: date
  - acceptedAt: date
  - sharedCount: number (default: 0)

- feedback: group
  - rating: number (1-5, opcional del usuario)
  - comment: textarea (feedback del usuario)
  - ratedAt: date

===============================================================================
1.7 COLECCI√ìN: events (Eventos y actividades) ‚úÖ
===============================================================================

Descripci√≥n: Eventos, festivales y actividades temporales
Sin cambios significativos del dise√±o original

Campos principales:
- id: text (auto-generado)
- name: text (requerido) - RF-AV05
- slug: text (√∫nico, auto-generado)
- description: richText (requerido)
- shortDescription: textarea (m√°x 300 chars)

Clasificaci√≥n:
- eventType: select ['festival', 'concert', 'exhibition', 'sport', 'cultural', 'religious', 'business', 'educational']
- category: relationship (one) -> categories (opcional)
- tags: array
  - tag: text

Programaci√≥n:
- schedule: group - RF-AV05
  - startDate: date (requerido)
  - endDate: date
  - startTime: text (HH:MM)
  - endTime: text (HH:MM)
  - timezone: text (default: 'America/Bogota')
  - duration: text (ej: "3 horas", "todo el d√≠a")
  - isRecurring: checkbox
  - recurrencePattern: text (si es recurrente)

Ubicaci√≥n:
- location: group
  - locationType: select ['place', 'custom', 'multiple', 'online']
  - place: relationship (one) -> places (si locationType='place')
  - customLocation: group (si locationType='custom')
    - name: text
    - address: text
    - latitude: number
    - longitude: number
    - city: text (default: 'Riohacha')
  - onlineDetails: group (si locationType='online')
    - platform: text (Zoom, YouTube, etc.)
    - url: text
    - accessCode: text

Organizaci√≥n:
- organizer: group
  - organizerType: select ['business', 'government', 'ngo', 'individual']
  - organizer: relationship (one) -> users (opcional)
  - organizerName: text (si no est√° en users)
  - contact: group
    - email: email
    - phone: text
    - website: text

Precio y reservas:
- pricing: group
  - isFree: checkbox (default: true)
  - ticketPrice: number
  - currency: select ['COP', 'USD']
  - hasDiscounts: checkbox
  - discountDescription: text
  - requiresReservation: checkbox
  - maxAttendees: number
  - currentAttendees: number (default: 0)

Multimedia:
- images: relationship (many) -> media
- videos: relationship (many) -> media
- poster: upload (imagen principal del evento)

Estado y configuraci√≥n:
- status: select ['draft', 'published', 'cancelled', 'postponed', 'completed'] (default: 'draft')
- isActive: checkbox (default: true)
- isFeatured: checkbox (default: false)
- isRecurring: checkbox (default: false)
- cancellationReason: textarea
- isApproved: checkbox (default: false) - para eventos que requieren aprobaci√≥n

- createdAt: date (auto)
- updatedAt: date (auto)

===============================================================================
1.8 COLECCI√ìN: media (Archivos multimedia) ‚úÖ
===============================================================================

Descripci√≥n: Gesti√≥n centralizada de im√°genes, videos y documentos
Sin cambios significativos del dise√±o original

Campos autom√°ticos de Payload:
- id, filename, mimeType, filesize, width, height, url, etc.

Campos adicionales:
- title: text (t√≠tulo descriptivo)
- alt: text (texto alternativo para accesibilidad)
- caption: text (descripci√≥n/caption)
- description: textarea (descripci√≥n detallada)

Metadatos de contenido:
- contentInfo: group
  - photographer: text (cr√©ditos)
  - location: text (d√≥nde se tom√≥)
  - takenAt: date (cu√°ndo se tom√≥)
  - camera: text (informaci√≥n de c√°mara)
  - license: select ['public', 'copyrighted', 'creative_commons']

Organizaci√≥n:
- tags: array
  - tag: text
- category: select ['place', 'event', 'business', 'user', 'promotion', 'document']
- isPublic: checkbox (default: true)
- isApproved: checkbox (default: true)

Configuraci√≥n t√©cnica:
- sizes: json (diferentes tama√±os generados autom√°ticamente)
- compressionSettings: group
  - quality: number (0-100)
  - format: select ['original', 'webp', 'jpeg', 'png']

Uso y estad√≠sticas:
- usageStats: group (solo lectura)
  - usedInPlaces: number
  - usedInEvents: number
  - usedInBusinesses: number
  - totalViews: number
  - lastUsed: date

- uploadedBy: relationship (one) -> users
- createdAt: date (auto)
- updatedAt: date (auto)

===============================================================================
2. RUTAS API UNIFICADAS Y OPTIMIZADAS
===============================================================================

2.1 USUARIOS UNIFICADOS (users) üî•
---------------------------------

CRUD b√°sico:
GET    /api/users                    - Listar usuarios con filtros
POST   /api/users                    - Crear usuario/empresa
GET    /api/users/:id                - Obtener usuario espec√≠fico
PATCH  /api/users/:id                - Actualizar usuario
DELETE /api/users/:id                - Eliminar usuario

Filtros espec√≠ficos:
GET    /api/users?where[userType][equals]=user      - Solo usuarios regulares
GET    /api/users?where[userType][equals]=business  - Solo empresas - RF-E01
GET    /api/users?where[userType][equals]=admin     - Solo administradores

Filtros de empresas:
GET    /api/users?where[businessData.businessType][equals]=hotel     - Hoteles
GET    /api/users?where[businessData.verificationStatus][equals]=verified - Empresas verificadas
GET    /api/users?where[businessData.location.coordinates.latitude][exists]=true - Con ubicaci√≥n

Gesti√≥n de favoritos (embebidos):
GET    /api/users/:id?select=favoritesList          - Obtener favoritos - RF-U06
PATCH  /api/users/:id                               - Actualizar favoritos en array

2.2 LUGARES TUR√çSTICOS (places) ‚úÖ
---------------------------------

Sin cambios en las rutas b√°sicas del dise√±o original:
GET    /api/places                   - Listar lugares - RF-L01, RF-L02
POST   /api/places                   - Crear lugar
GET    /api/places/:id               - Obtener lugar espec√≠fico
PATCH  /api/places/:id               - Actualizar lugar
DELETE /api/places/:id               - Eliminar lugar

2.3 CATEGOR√çAS (categories) ‚úÖ
-----------------------------

Sin cambios del dise√±o original:
GET    /api/categories               - Listar categor√≠as - RF-L03
POST   /api/categories               - Crear categor√≠a
GET    /api/categories/:id           - Obtener categor√≠a
PATCH  /api/categories/:id           - Actualizar categor√≠a
DELETE /api/categories/:id           - Eliminar categor√≠a

2.4 RESE√ëAS (reviews) ‚úÖ
-----------------------

Sin cambios del dise√±o original:
GET    /api/reviews                  - Listar rese√±as - RF-L06
POST   /api/reviews                  - Crear rese√±a
GET    /api/reviews/:id              - Obtener rese√±a
PATCH  /api/reviews/:id              - Actualizar rese√±a
DELETE /api/reviews/:id              - Eliminar rese√±a

2.5 CONVERSACIONES UNIFICADAS (conversations) üî•
-----------------------------------------------

CRUD b√°sico:
GET    /api/conversations            - Listar conversaciones - RF-AV01
POST   /api/conversations            - Crear conversaci√≥n
GET    /api/conversations/:id        - Obtener conversaci√≥n completa con mensajes
PATCH  /api/conversations/:id        - Actualizar conversaci√≥n
DELETE /api/conversations/:id        - Eliminar conversaci√≥n

Gesti√≥n de mensajes (embebidos):
POST   /api/conversations/:id/messages - Agregar mensaje a conversaci√≥n - RF-AV01
PATCH  /api/conversations/:id/messages/:messageId - Actualizar mensaje espec√≠fico
DELETE /api/conversations/:id/messages/:messageId - Eliminar mensaje espec√≠fico

Filtros espec√≠ficos:
GET    /api/conversations?where[user][equals]=user_id - Conversaciones de un usuario
GET    /api/conversations?where[isActive][equals]=true - Solo conversaciones activas
GET    /api/conversations?where[language][equals]=es   - Por idioma

2.6 RECOMENDACIONES UNIFICADAS (recommendations) üî•
--------------------------------------------------

CRUD b√°sico:
GET    /api/recommendations          - Listar recomendaciones - RF-AV02, RF-AV04
POST   /api/recommendations          - Crear recomendaci√≥n
GET    /api/recommendations/:id      - Obtener recomendaci√≥n espec√≠fica
PATCH  /api/recommendations/:id      - Actualizar recomendaci√≥n
DELETE /api/recommendations/:id      - Eliminar recomendaci√≥n

Filtros por tipo:
GET    /api/recommendations?where[recommendationType][equals]=place     - Solo lugares
GET    /api/recommendations?where[recommendationType][equals]=itinerary - Solo itinerarios
GET    /api/recommendations?where[recommendationType][equals]=experience - Solo experiencias

Filtros de usuario:
GET    /api/recommendations?where[user][equals]=user_id - Recomendaciones de un usuario
GET    /api/recommendations?where[isPublic][equals]=true - Recomendaciones p√∫blicas

2.7 EVENTOS (events) ‚úÖ
----------------------

Sin cambios del dise√±o original:
GET    /api/events                   - Listar eventos - RF-AV05
POST   /api/events                   - Crear evento
GET    /api/events/:id               - Obtener evento espec√≠fico
PATCH  /api/events/:id               - Actualizar evento
DELETE /api/events/:id               - Eliminar evento

2.8 MULTIMEDIA (media) ‚úÖ
------------------------

Sin cambios del dise√±o original:
GET    /api/media                    - Listar archivos - RF-L05, RF-E03
POST   /api/media                    - Subir archivo
GET    /api/media/:id                - Obtener archivo espec√≠fico
PATCH  /api/media/:id                - Actualizar archivo
DELETE /api/media/:id                - Eliminar archivo

===============================================================================
3. RUTAS PERSONALIZADAS Y ENDPOINTS ESPECIALES
===============================================================================

3.1 AUTENTICACI√ìN
----------------
POST   /api/auth/login               - Inicio de sesi√≥n - RF-A02
POST   /api/auth/register            - Registro de usuario/empresa - RF-A01
POST   /api/auth/logout              - Cerrar sesi√≥n - RF-A06
POST   /api/auth/forgot-password     - Recuperar contrase√±a - RF-A03
POST   /api/auth/reset-password      - Restablecer contrase√±a - RF-A03
GET    /api/auth/me                  - Perfil del usuario autenticado

3.2 B√öSQUEDA AVANZADA
--------------------
GET    /api/search/places            - B√∫squeda avanzada de lugares - RF-L02
GET    /api/search/businesses        - B√∫squeda de empresas
GET    /api/search/events            - B√∫squeda de eventos
GET    /api/search/global            - B√∫squeda global (todos los tipos)

3.3 ASISTENTE VIRTUAL Y IA
-------------------------
POST   /api/ai/chat                  - Enviar mensaje al asistente - RF-AV01, RF-AV03
GET    /api/ai/recommendations       - Obtener recomendaciones IA - RF-AV02
POST   /api/ai/generate-itinerary    - Generar itinerario personalizado - RF-AV04
GET    /api/ai/suggestions           - Sugerencias contextuales

3.4 GEOLOCALIZACI√ìN
------------------
GET    /api/geo/nearby               - Lugares cercanos - RF-L04
GET    /api/geo/route                - Calcular rutas
POST   /api/geo/geocode              - Geocodificar direcciones

3.5 ESTAD√çSTICAS Y ANALYTICS
---------------------------
GET    /api/stats/dashboard          - Dashboard para empresas - RF-E05
GET    /api/stats/places             - Estad√≠sticas de lugares
GET    /api/stats/users              - Estad√≠sticas de usuarios (admin)

===============================================================================
4. CONFIGURACI√ìN DE PAYLOAD CMS UNIFICADO
===============================================================================

4.1 COLECCIONES CON CAMPOS CONDICIONALES
---------------------------------------
- users: Campos businessData solo si userType='business'
- recommendations: Campos espec√≠ficos seg√∫n recommendationType
- events: Campos de ubicaci√≥n seg√∫n locationType

4.2 VALIDACIONES CROSS-COLLECTION
--------------------------------
- reviews: Un usuario solo puede rese√±ar un lugar una vez
- users: Email √∫nico en todo el sistema
- conversations: sessionId √∫nico por usuario activo

4.3 HOOKS OPTIMIZADOS
--------------------
- users: C√°lculo autom√°tico de estad√≠sticas de empresa
- places: Actualizaci√≥n de ratings cuando cambian reviews
- conversations: Auto-actualizaci√≥n de lastInteraction
- recommendations: C√°lculo de engagement metrics

4.4 PERMISOS UNIFICADOS
----------------------
- users.businessData: Solo visible si es empresa verificada
- conversations.messages: Solo el usuario y admins
- recommendations: P√∫blicas si isPublic=true

===============================================================================
5. BENEFICIOS DE LA ESTRUCTURA UNIFICADA
===============================================================================

üöÄ RENDIMIENTO:
- 38% menos colecciones = menos complejidad
- Datos relacionados en una sola query
- Menos JOINs entre tablas
- Mejor cach√© por concentrar datos

üíª DESARROLLO:
- APIs m√°s simples e intuitivas
- Menos endpoints que mantener
- L√≥gica unificada para tipos similares
- C√≥digo m√°s limpio y mantenible

üìä ADMINISTRACI√ìN:
- Interface m√°s simple en Payload Admin
- Menos configuraci√≥n de permisos
- Gesti√≥n centralizada de usuarios
- Mejor experiencia para administradores

üîß ESCALABILIDAD:
- Estructura preparada para crecimiento
- F√°cil agregar nuevos tipos sin nuevas colecciones
- Migraci√≥n m√°s simple en el futuro
- Menos dependencias entre entidades

===============================================================================
6. PR√ìXIMOS PASOS DE IMPLEMENTACI√ìN
===============================================================================

FASE 1 - CONFIGURACI√ìN BASE (Semana 1):
‚úÖ Configurar payload.config.ts con 8 colecciones unificadas
‚úÖ Implementar colecci√≥n users con campos condicionales
‚úÖ Configurar autenticaci√≥n y permisos b√°sicos
‚úÖ Setup de uploads y media

FASE 2 - COLECCIONES PRINCIPALES (Semana 2):
‚úÖ Implementar places, categories, reviews
‚úÖ Configurar conversations con mensajes embebidos
‚úÖ Implementar recommendations con tipos
‚úÖ Setup de events y relaciones

FASE 3 - FUNCIONALIDADES AVANZADAS (Semana 3):
‚úÖ Rutas personalizadas de autenticaci√≥n
‚úÖ B√∫squeda avanzada y filtros
‚úÖ Integraci√≥n b√°sica con asistente IA
‚úÖ Geolocalizaci√≥n y mapas

FASE 4 - OPTIMIZACI√ìN Y TESTING (Semana 4):
‚úÖ Hooks y validaciones personalizadas
‚úÖ Optimizaci√≥n de rendimiento
‚úÖ Testing completo de APIs
‚úÖ Documentaci√≥n final

===============================================================================
CONCLUSI√ìN
===============================================================================

Esta estructura unificada mantiene TODA la funcionalidad de los requerimientos 
RF-A01 a RF-E07 pero en una arquitectura 38% m√°s simple y eficiente.

La unificaci√≥n est√° dise√±ada espec√≠ficamente para:
- Turismo en Riohacha y La Guajira
- Escalabilidad para crecimiento futuro
- Facilidad de desarrollo y mantenimiento
- Excelente experiencia de usuario

¬øProcedemos con la implementaci√≥n de esta estructura unificada?
